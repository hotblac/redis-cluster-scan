version: '3.8'
services:
  redis-node-1:
    image: redis:7.0.2
    ports:
      - '6371:6379'
    volumes:
      - ./redis/conf/redis-node-1:/usr/local/etc/redis
    command: redis-server /usr/local/etc/redis/redis.conf
  redis-node-2:
    image: redis:7.0.2
    ports:
      - '6372:6379'
    volumes:
      - ./redis/conf/redis-node-2:/usr/local/etc/redis
    command: redis-server /usr/local/etc/redis/redis.conf
  redis-node-3:
    image: redis:7.0.2
    ports:
      - '6373:6379'
    volumes:
      - ./redis/conf/redis-node-3:/usr/local/etc/redis
    command: redis-server /usr/local/etc/redis/redis.conf
  # This container runs the cluster command on the three nodes and then stops
  init-cluster:
    image: redis:7.0.2
    command: redis-cli --cluster create redis-node-1:6379 redis-node-2:6379 redis-node-3:6379 --cluster-yes
    depends_on:
      - redis-node-1
      - redis-node-2
      - redis-node-3

# Example command to connect CLI to node 1
# docker run -it --network redis-cluster-scan_default --rm redis:7.0.2 redis-cli -h redis-node-1
